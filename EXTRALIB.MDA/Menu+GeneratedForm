Option Compare Database
Option Explicit

Const Druckrand = 278'115 'passables Minimum
Const Höhe = 360
Const Abstand = 30
Const Einrückung = "      "
Const FontSizeNormal = 8
Global Const inkrementell = " LIKE'*wasser*'" 'muss bis auf Weiteres global gelten

Type DeviceMode
  DeviceName As String * 32
  SpecVersion As Integer
  DriverVersion As Integer
  Size As Integer
  DriverExtra As Integer
  Fields As Long
  Orientation As Integer
  PaperSize As Integer
  PaperLength As Integer
  PaperWidth As Integer
  Scale As Integer
  Copies As Integer
  DefaultSource As Integer
  PrintQuality As Integer
  Color As Integer
  Duplex As Integer
  Resolution As Integer
  TTOption As Integer
End Type

Type MarginInfo
  LeftMargin As Integer
  TopMargin As Integer
  RightMargin As Integer
  BotMargin As Integer
  DataOnly As Integer
  FormSizeX As Integer
  FormSizeY As Integer
  DefaultSize As Integer
  Columns As Integer
  FormSpacingX As Integer
  FormSpacingY As Integer
  ItemOrder As Integer
End Type

Type DevModeStr
  rgb As String * 68
End Type

Type MipStr
  rgb As String * 24
End Type

Function BeimÄndern (SperrFeld$)
Dim x%, l As Control
If SperrFeld > "" Then
  On Error Resume Next'falls kein Steuerelement aktiv ist
  x = Screen.ActiveControl.Left = 0
  On Error GoTo 0
  Set l = Screen.ActiveForm(SperrFeld)
  If l > 1 Or (l And x) Then
    MsgStop "Dieser Datensatz hat den Status '" & Sperre(Val(l)) & "', weil er für bestimmte Funktionalitäten zwingend benötigt wird. Er kann deshalb nicht gelöscht und " & IIf(l = 1, "in Spalte 1 ", "") & "nicht geändert werden."
    BeimÄndern = True
    Exit Function
  End If
End If
On Error Resume Next'falls keine Funktion definiert
BeimÄndern = Eval(Eval("check()"))
End Function

Sub Bericht (d As Database, What$, Spaltenbreiten$, Prefix$)
'fkt. für ZWEI Gruppierungsebenen (Flexibilisierung müsste ggf. erst reinprogrammiert werden)

Dim r As Report, mi As MarginInfo, miS As MipStr, c As Control, tmp$, Seitenbreite%, Breiten&, rs As Recordset

On Error Resume Next
DoCmd DeleteObject A_REPORT, What

On Error GoTo BerichtA

DoCmd CopyObject GetDBFileName(), What, A_REPORT, "Vorlage"
DoCmd OpenReport What, A_DESIGN
Set r = Reports(What)
r.RecordSource = What

tmp = GetValueOrDefault(Spaltenbreiten, "1")
While tmp > ""
  Breiten = Breiten + Val(DevideString(tmp))
Wend

miS.rgb = r.PrtMip
LSet mi = miS
mi.LeftMargin = 1.22 * Druckrand
mi.RightMargin = .92 * Druckrand
mi.TopMargin = Druckrand
mi.BotMargin = .3 * mi.TopMargin
LSet miS = mi
r.PrtMip = miS.rgb

Seitenbreite = PapierBreite() - (3 * Druckrand)

'Kopf
Set c = CreateReportControl(r.Name, 100, 1, "", "", 0, 0, Seitenbreite, 1.5 * Höhe)
c.Caption = What
c.FontSize = 13
c.FontBold = True

Set rs = DBEngine(0)(0).OpenRecordset(What)

BerichtsGruppierung rs, Spaltenbreiten, Seitenbreite, Breiten, Höhe, r, 1, Prefix
BerichtsGruppierung rs, Spaltenbreiten, Seitenbreite, Breiten, Höhe, r, 2, Prefix
BerichtsGruppierung rs, Spaltenbreiten, Seitenbreite, Breiten, Höhe, r, 3, Prefix
BerichtsSpalten rs, Spaltenbreiten, Seitenbreite / Breiten, Höhe, Abstand, r, 0, Prefix, 0

rs.Close

DoCmd SetWarnings 0
DoCmd Close A_REPORT, What
DoCmd OpenReport What, A_PREVIEW

Exit Sub
BerichtA:
  MsgError "", "Bericht"
  'Stop
  'Resume
  Exit Sub
  
End Sub

Sub Bericht_Jahresscheiben (d As Database, ByVal wS$, e$)
Dim g$, i%, n$, SQL$, r As Recordset
Const p = "J_"
Const f = "Gruppe,Einheit,Sortierung,Position"
g = "Min(G)as Gruppe,Einheit,Min(S&Position)as Sortierung,Position FROM " & et & " WHERE" & e & "Einheit,Position PIVOT'" & p & "'&Jahr"
If CreateTable(d, wS & "L", f, "Min(MengeList)", g) Then Exit Sub
If CreateTable(d, wS & "S", f, "Sum(Menge)", SubstituteAll(g, "'" & p & "'&", " ")) Then Exit Sub
Set r = d.OpenRecordset(wS & "S")
SQL = ""
For i = 0 To r.Fields.Count - 1
  n = r(i).Name
  If n Like "####" Then SQL = SQL & "," & p & n
Next
r.Close
DoCmd Close A_REPORT, wS
If CreateTable(d, wS, f, "", "S.*" & SQL & " FROM[" & wS & "L]L INNER JOIN [" & wS & "S]S ON L.Einheit=S.Einheit AND L.Position=S.Position") Then Exit Sub
Bericht d, wS, "2+5", p
End Sub

Private Sub BerichtsGruppierung (rs As Recordset, Spaltenbreiten$, Seitenbreite%, Breiten&, Höhe%, r As Report, Gruppierung%, Prefix$)
Dim c As Control, i%, Zwischenraum%

Zwischenraum = IIf(Gruppierung = 1, Abstand * 4, 0)

i = Gruppierung - 1
i = CreateGroupLevel(r.Name, rs(i).Name, Gruppierung < 3, Gruppierung < 3)

Select Case i
 Case 0
  r.Section(6).ForceNewPage = 2
 Case 1
  r.GroupLevel(i).KeepTogether = 2
End Select

If Gruppierung < 3 Then
  i = Gruppierung * 2 + 3
  r.Section(i).Height = 0
  r.Section(i + 1).Height = Höhe * 1.8
  
  Set c = CreateReportControl(r.Name, 109, i, "", "", 0, Zwischenraum, Seitenbreite, Höhe)
  c.FontSize = FontSizeNormal
  If Gruppierung = 1 Then
    c.FontBold = True
    c.FontSize = 12
    c.FontUnderline = True
  End If
  c.ControlSource = rs(Gruppierung - 1).Name

  Set c = CreateReportControl(r.Name, 109, i + 1, "", "", 0, Abstand, Seitenbreite, Höhe)
  c.FontSize = FontSizeNormal
  If Gruppierung = 1 Then
    c.FontBold = True
    c.ControlSource = "='SUMME  '&" & rs(0).Name
   Else
    c.ControlSource = "=iif(IsNull(" & rs(Gruppierung - 1).Name & "),Null,'" & Einrückung & "<SUMME'&iif(" & rs(0).Name & inkrementell & ",' (inkrementell)','')&'>')"
  End If
  
  BerichtsSpalten rs, Spaltenbreiten, Seitenbreite / Breiten, Höhe, Zwischenraum, r, Gruppierung, Prefix, -1
  BerichtsSpalten rs, Spaltenbreiten, Seitenbreite / Breiten, Höhe, Zwischenraum, r, Gruppierung, Prefix, 0

End If

End Sub

Private Sub BerichtsSpalten (rs As Recordset, ByVal Spaltenbreiten$, BreitenFaktor#, Höhe%, Zwischenraum%, r As Report, Gruppierung%, Prefix$, Kopf%)
Dim Breite#, Links#, i%, p%, c As Control, f$, g$, Fmt$, FeldDopplung%

FeldDopplung = Abs(rs(rs.Fields.Count - 1).Type > 9)'Dopplung aller Zahlenfelder durch Textfelder (mit Präfix 'Prefix$')

For i = 2 To rs.Fields.Count / (FeldDopplung + 1) + IIf(FeldDopplung, 1, -1)
  f = rs(i).Name
  If f <> "Sortierung" Then
    Links = Links + Breite
    If Spaltenbreiten > "" Then
      Breite = Val(DevideString(Spaltenbreiten))
      
      'provisorische Lösung "+1" -> freie Spalte für manuellen Eintrag des akt.Jahres
      If Spaltenbreiten = "" Then Breite = Breite / (rs.Fields.Count / (FeldDopplung + 1) + 3 - i)'wenn weniger Breiten angegeben, teilen sich alle restlichen Spalten den Breiten-Rest
  
    End If
    If Gruppierung = 0 Or (rs(i).Type < 10 And (Gruppierung < 2 Or Not Kopf)) Then
      Set c = CreateReportControl(r.Name, IIf(Kopf, 100, 109), 2 * Gruppierung + IIf(Gruppierung > 0, 4 + Kopf, 0), "", "", BreitenFaktor * Links, IIf(Kopf, Zwischenraum, IIf(Gruppierung, Abstand, 0)), BreitenFaktor * Breite, Höhe)
      If rs(i).Type < 10 Then c.TextAlign = 3
      Fmt = ",IIf([" & rs(0).Name & "]like'*kosten*'and not([" & rs(0).Name & "]like'*vert*'or[" & rs(0).Name & "]like'*zähl*'),2,0))"
      c.FontSize = FontSizeNormal
      If Kopf Then
	c.Caption = f
	c.FontBold = True
	c.FontSize = 12
	c.FontUnderline = True
       ElseIf Gruppierung Then
	c.FontBold = True
	g = rs(0).Name & IIf(Gruppierung = 1, "", "&" & rs(1).Name)
	g = "Round_WithPos_FxLen(DSum('[" & f & "]','[" & r.RecordSource & "]','" & g & "=" & Chr(34) & "'&" & g & "&'" & Chr(34) & "')-iif(" & rs(0).Name & inkrementell & ",VToD(DSum('[" & IIf(accExistTableField(CStr(r.RecordSource), CStr(Val(f) - 1)), Val(f) - 1, f) & "]','[" & r.RecordSource & "]','" & g & "=" & Chr(34) & "'&" & g & "&'" & Chr(34) & "')),0)" & Fmt
	If Gruppierung = 1 Then
	  c.FontUnderline = True
	  c.ControlSource = "=" & g
	 Else
	  c.ControlSource = "=iif(IsNull(" & rs(1).Name & "),Null," & g & ")"
	End If
       ElseIf rs(i).Type < 10 Then
	c.ControlSource = IIf(FeldDopplung, "[" & Prefix & f & "]", "=Round_WithPos_FxLen([" & f & "]" & Fmt)
       Else
	c.ControlSource = "=iif(IsNull(" & rs(1).Name & "),'','" & Einrückung & "')&" & f
      End If
    End If
  End If
Next

End Sub

Private Sub CreateCtl (f As Form, Links%, Oben%, Breite%, Höhe%, Beschriftung$, Ereignisproz%, Code$)
Dim ScaleFactor#()
ReDim ScaleFactor#(1)
ScaleFactor(0) = 1
ScaleFactor(1) = 1
CreateCtlScaled f, Links, Oben, Breite, Höhe, Beschriftung, Ereignisproz, Code, ScaleFactor(), 1
End Sub

Private Sub CreateCtlScaled (f As Form, Links%, Oben%, Breite%, Höhe%, Beschriftung$, Ereignisproz%, Code$, ScaleFactor#(), HeightAndFontFactor!)
On Error GoTo SchaltflächeErzeugenA

Dim c As Control
Set c = CreateControl(f.Name, 104, 1, "", "", ScaleFactor(0) * Links, ScaleFactor(1) * Oben / HeightAndFontFactor, ScaleFactor(0) * Breite, ScaleFactor(1) * Höhe / HeightAndFontFactor)
c.FontSize = 7 * HeightAndFontFactor
c.FontWeight = 900
c.FontName = "Arial"
c.Caption = Beschriftung
If Ereignisproz Then
  EventProcedure "Click", c, f, Code
 Else
  c.OnClick = "=" & Code & ")"
End If

Exit Sub
SchaltflächeErzeugenA:
  MsgError "", "CreateCtlScaled"
  'Stop
  'Resume
  Exit Sub
  
End Sub

Sub EventProcedure (Eigenschaft$, c As Control, f As Form, t$)
On Error GoTo EventProcedureA

Dim p As Property, e$, g$, l%
Const lmax = 26
g = c.Name
Select Case Eigenschaft
 Case "BeforeDelConfirm"
  g = "Form"
  Set p = f.Properties(Eigenschaft)
  e = "(Cancel%,Response%)"
 Case "BeforeUpdate"
  Set p = c.Properties(Eigenschaft)
  e = "(Cancel%)"
 Case Else
  Set p = c.Properties("On" & Eigenschaft)
  If Eigenschaft = "NotInList" Then e = "(NewData$,Response%)"
End Select
If IsNumeric(Left(g, 1)) Then 'bei Spalten mit numerisch/en/beginnenden Namen kommt zum Glück bisher nur...
  p = "=BeimÄndern("""")"     '"BeforeUpdate" vor,...
 Else                         'sonst müsste eine andere Lösung her,...
  p = "[Ereignisprozedur]"    'weil die Namen von (Ereignis)Prozeduren nicht mit Ziffern beginnen dürfen.
  l = Len(g)
  If l > lmax Then
    MsgStop "Bitte den Spaltennamen '" & g & "' verkürzen von " & l & " auf maximal " & lmax & " Zeichen!"
   Else
    f.Module.InsertText "Sub " & g & "_" & Eigenschaft & e & CR() & t & CR() & "End Sub"
  End If
End If

Exit Sub
EventProcedureA:
  MsgError "", "EventProcedure"
  Application.Echo True
  DoCmd Hourglass 0
  'Stop
  'Resume
  Exit Sub

End Sub

Sub MainForm ()
Dim f As Form
Set f = CreateForm()
f.Module.InsertText "Option Explicit"
CreateCtl f, 0, 0, 1050, 225, "&Suchen...", -1, "On Error Resume Next:Screen.PreviousControl.SetFocus:MenuI 0,1,9"
CreateCtl f, 1054, 0, 1050, 225, "&Drucken...", -1, "SteuerelementhöheÄndern Me,100,0:MenuI 0,0,6:SteuerelementhöheÄndern Me,100,-1"
End Sub

Sub MenuI (P1%, P2%, P3%)
On Error GoTo MenuIA

DoCmd DoMenuItem P1, P2, P3, A_MENU_VER20

Exit Sub
MenuIA:
  '<> = Aktion abgebrochen
  If Err <> 2501 Then MsgError "", "MenuI"
  Exit Sub

End Sub

Sub NichtInListe (NewData$, Response%, LeererWertZulässig%, DbName$)
On Error GoTo NichtInListeA

Dim db As Database, Re As Relation, t As Recordset, Tabelle$, i%, c As Control, j%
On Error Resume Next
Set db = DBEngine(0)(0)
Set c = Screen.ActiveControl
If Err Then Set c = Screen.PreviousControl
On Error GoTo NichtInListeA
i = c.BoundColumn - 1
Tabelle = TabelleErmitteln(DbName, CStr(c.RowSource))
Set t = db.OpenRecordset(Tabelle)
If IsNull(NewData) Or NewData = "" Then
  If LeererWertZulässig Then
    t.AddNew
    t(i) = " "
    On Error Resume Next
    t.Update
    If Err Then
      On Error GoTo NichtInListeA
      '''SendKeys "%{Down}{Down}{Tab}"
      Response = DATA_ERRCONTINUE
     Else
      On Error GoTo NichtInListeA
      Response = DATA_ERRADDED
    End If
   Else
    MsgBox "In dieses Feld muß ein Wert eingetragen werden", 16, "Leeres Feld unzulässig"
    Response = DATA_ERRCONTINUE
 End If
 ElseIf NewData Like " *" Or NewData Like "* " Then
  MsgBox "Am Anfang und Ende des eingegebenen Textes dürfen sich keine Leerzeichen befinden", 16, "Unzulässiger Wert"
  Response = DATA_ERRCONTINUE
 Else
  For j = 0 To db.Relations.Count - 1
    Set Re = db.Relations(j)
    If Re.ForeignTable = Tabelle And Re.Fields(0).ForeignName = t(i).Name Then Exit For
  Next
  If Re.Fields.Count = 1 Then 'Nur für 1-spaltige Fremdschlüssel
    If YesNo(Tabelle & " '" & RTrim(NewData) & "' neu aufnehmen?", "Neuer Wert", 0, 0) Then
      NichtInListeTabelle t, CStr(t(i).Name), RTrim(NewData)
      Response = DATA_ERRADDED
     Else
      Response = DATA_ERRCONTINUE
    End If
   Else
    Response = DATA_ERRCONTINUE
  End If
End If
t.Close

Exit Sub
NichtInListeA:
  MsgError "", "NichtInListe"
  'Stop
  'Resume
  Exit Sub

End Sub

Private Sub NichtInListeTabelle (r As Recordset, Feld$, Wert)
On Error GoTo NichtInListeTabelleA

Dim db As Database, t As Recordset, j%, Re As Relation
Set db = DBEngine(0)(0)
For j = 0 To db.Relations.Count - 1
  Set Re = db.Relations(j)
  If Re.ForeignTable = r.Name And Re.Fields(0).ForeignName = Feld Then
    If Not (Re.Attributes And DB_RELATIONDONTENFORCE) Then
      Set t = db(Re.Table).OpenRecordset()
      NichtInListeTabelle t, CStr(Re.Fields(0).Name), Wert
    End If
  End If
Next
r.AddNew
r(Feld) = Wert
r.Update

Exit Sub
NichtInListeTabelleA:
  If Err <> 3022 Then MsgError "", "NichtInListeTabelle"
  'Stop
  'Resume
  Exit Sub

End Sub

Private Function PapierBreite% ()
PapierBreite = 21 * cm
End Function

Function Sperre$ (Status%)
Dim u$
Const v = "veränderbar"
u = " un" & v
Select Case Status
 Case 0
  Sperre = v
 Case 1
  Sperre = "1.Spalte" & u
 Case 2
  Sperre = "komplett" & u
End Select
End Function

Sub SteuerelementhöheÄndern (Formular As Form, Spalten%, zurück%)
'nicht "Private", da u.a. durch (generiertes) Formularmodul aufgerufen
On Error GoTo SteuerelementhöheÄndernA

Dim i%, c As Control
If Not zurück Then Application.Echo False
For i = 0 To Formular.Count - 1
  If Formular(i).Section = 0 Then
    Set c = Formular(i)
    c.BorderStyle = IIf(zurück, 1, 0)
    If Spalten > 7 Then c.Height = c.Height * IIf(zurück, 3 / 5, 5 / 3)
  End If
Next
If zurück Then
  Formular.Section(0).Height = c.Height
  c.Width = Formular(i - 2).Width
  Application.Echo True
 Else
  If c.Width < Druckrand Then
    c.Width = 0
    Formular.Width = Formular.Width - c.Width
   Else
    c.Width = c.Width - Druckrand
    Formular.Width = Formular.Width - Druckrand
  End If
End If

Exit Sub
SteuerelementhöheÄndernA:
  MsgError "", "SteuerelementhöheÄndern"
  'Stop
  'Resume
  Exit Sub
  
End Sub

Function TabelleAktualisieren% (Steu$, f$, DbName$)
On Error GoTo TabelleAktualisierenA

Dim e, g$, c As Control
g = Screen.ActiveForm.Name
e = Forms(g)(Steu)
DoCmd Close A_FORM, g
If f Like "Formular*" And IsLoaded(f) Then
  Forms(f).SetFocus
  On Error Resume Next
  Set c = Screen.ActiveControl
  c.RowSource = c.RowSource'Aktualisierungs-Dummy
  On Error GoTo TabelleAktualisierenA
End If
DoCmd DeleteObject A_FORM, g

Exit Function
TabelleAktualisierenA:
  If Err <> 2467 Then MsgError "", "TabelleAktualisieren"
  Exit Function

End Function

Function TabelleBearbeiten% ()
On Error GoTo TabelleBearbeitenA

Dim f As Form, c As Control, DatensatzMerker$
Set f = Screen.ActiveForm
Set c = Screen.ActiveControl

On Error Resume Next'NewRec
DatensatzMerker = f.BookMark
If Err Then
  On Error GoTo TabelleBearbeitenA
  f.Requery
 Else
  On Error GoTo TabelleBearbeitenA
  f.Requery
  f.BookMark = DatensatzMerker
End If

c.SetFocus
TabelleBearbeitenA CStr(c.RowSource), Val(c.BoundColumn), c

Exit Function
TabelleBearbeitenA:
  Select Case Err
   Case 2467'falls Formular geschlossen wurde
   Case 3049, 3159, 3201
    Resume Next
   Case Else
    MsgError "", "TabelleBearbeiten"
  End Select
  Exit Function

End Function

Private Sub TabelleBearbeitenA (SQLStr$, Spalte%, Wert)
On Error GoTo TabelleBearbeitenAA

Dim d As Database, GerätModus As DeviceMode, r As Recordset, idx As Index, qd As QueryDef, t As TableDef, fd As Field, fn$, Tabl%, Spalten%(), Breite&(), schmal%, ty%, f As Form, c As Control, e$, p$, Tabelle$, Feld$, isRl%, Rl As Relation, Re As Relation, ri As MarginInfo, dm As DevModeStr, mip As MipStr, i%, j&, k%, x&, dx%, dy%, HeightAndFontFactor!, ScreenSize%(), ScaleFactor#()
ReDim ScreenSize(1), ScaleFactor(1), Spalten(2), Breite(2)
Const q = """"
Const l = "Datensatzsperre"
    
Set d = DBEngine(0)(0)

Tabelle = TabelleErmitteln(CStr(d.Name), SQLStr)

If Tabelle = "Datenmodell" Then
    Datenmodell d

  ElseIf Tabelle > "" Then
    DoCmd Hourglass -1
    
    i = CreateIC("DISPLAY", "", "", "")
    x = GetDeviceCaps(i, 8) / (1 + Abs(debugging))
    dx = GetDeviceCaps(i, 88)
    dy = GetDeviceCaps(i, 90)
    i = DeleteDC(i)
    
    'k ... twips per pixel * 10
    Select Case x
     Case Is <= 640: i = 80: k = 188
     Case Is <= 800: i = 101: k = 149
     Case Is <= 1024: i = 129: k = 116
     Case Is <= 1152: i = 147: k = 102
     Case Is <= 1215: i = 155: k = 97 'VM in Unity
     Case Is <= 1280: i = 163: k = 92
     Case Is <= 1440: i = 186: k = 81
     Case Else: i = 205: k = 73       '>= 1600
    End Select
    j = x * k
    ScreenSize(0) = j / 1000 * i
    ScreenSize(1) = j * IIf(x = 1215, 8.9, IIf(x > 1280, 9.07, 11.25)) / k '1215 = VM in Unity
    ScaleFactor(0) = 14400 / dx / k '1440 Twips per Inch
    ScaleFactor(1) = ScaleFactor(0) * dx / dy
    HeightAndFontFactor = 1 + (i / 100 - 1) / 2 'je nach Auflösung im gleichen Verhältnis Zeilenhöhe verringern und Schrift vergrößern
    
    On Error Resume Next
    fn = Screen.ActiveForm.Name
    Set t = d(Tabelle)
    If Err Then
      On Error GoTo TabelleBearbeitenAA
      Set qd = d.QueryDefs(Tabelle)
      Feld = qd.Fields(Spalte - 1).Name
      Spalte = qd.Fields(Spalte - 1).Type = DB_TEXT
      Spalten(0) = qd.Fields.Count
      For i = 0 To qd.Fields.Count - 1
	TabelleBearbeitenASpalten qd.Fields(i).Type, Spalten()
      Next
     Else
      On Error GoTo TabelleBearbeitenAA
      Tabl = True
      Feld = t(Spalte - 1).Name
      Spalte = t(Spalte - 1).Type = DB_TEXT
      Spalten(0) = t.Fields.Count
      For i = 0 To t.Fields.Count - 1
	TabelleBearbeitenASpalten t(i).Type, Spalten()
      Next
    End If

    'Sortierung für...
    e = ""
    For i = 0 To Spalten(0) - 1 '...zu priorisierende Spalten
      x = t(i).Required
      For k = 0 To t.Indexes.Count - 1
	If x Then Exit For
	Set idx = t.Indexes(k)
	  If idx.Primary Then
	    For j = 0 To idx.Fields.Count - 1
	      If idx.Fields(j).Name = t(i).Name Then x = True: Exit For
	    Next
	  End If
      Next
      If x Then TabelleBearbeitenASort e, t(i)
    Next
    For i = 0 To Spalten(0) - 1 '...restliche Spalten
      TabelleBearbeitenASort e, t(i)
    Next
    
    SQLStr = InsString("SELECT * FROM[" & Tabelle & "]IN'" & d.Name & "'" & IIf(Spalte, "WHERE[" & Feld & "]>' '", ""), e, " ORDER BY") & ";"
    For i = 0 To Forms.Count - 1
      If Forms(i).RecordSource = SQLStr Then Exit For
    Next
    If i < Forms.Count Then
      Forms(i).SetFocus

     Else
      Application.Echo debugging
    
      Set f = CreateForm()
      DoCmd MoveSize 0, 0, ScreenSize(0), ScreenSize(1)
      MenuI 3, 3, 10'Formularkopf/-fuß einblenden
      e = f.Name
      f.Popup = True
      f.ScrollBars = 2
      f.NavigationButtons = 0
      f.BorderStyle = 0
      f.ControlBox = 0
      f.MaxButton = 0
      f.MinButton = 0
      f.ShortcutMenu = 0
      f.Section(0).Height = 0
      f.Section(1).Height = 0
      f.Section(2).Height = 0
      f.Section(1).BackColor = 12632256
      f.Section(1).DisplayWhen = 2
      f.RecordSource = SQLStr
      f.Module.InsertText "Option Explicit"
      
      Set c = CreateControl(e, 100, 1, "", "", 0, 0, ScaleFactor(0) * 11480, ScaleFactor(1) * 360 / HeightAndFontFactor)
      c.BackStyle = 0
      c.FontSize = 14 * HeightAndFontFactor
      c.FontName = "Arial"
      c.TextAlign = 2
      c.Caption = Tabelle
    
      CreateCtlScaled f, 0, 0, 1050, 225, "&Suchen...", -1, "On Error Resume Next:Screen.PreviousControl.SetFocus:MenuI 0,1,9", ScaleFactor(), HeightAndFontFactor
      CreateCtlScaled f, 1054, 0, 1050, 225, "&Drucken...", -1, "SteuerelementhöheÄndern Me," & Trim(Str(Spalten(0))) & ",0:MenuI 0,0,6:SteuerelementhöheÄndern Me," & Trim(Str(Spalten(0))) & ",-1", ScaleFactor(), HeightAndFontFactor
'      CreateCtlScaled F, 9048, 0, 1050, 225, "&Andere...", -1, "TabelleBearbeitenP Null", ScaleFactor(), HeightAndFontFactor
      CreateCtlScaled f, 10102, 0, 1050, 225, "S&chließen", 0, "TabelleAktualisieren(" & q & Feld & q & "," & q & fn & q & "," & q & d.Name & q, ScaleFactor(), HeightAndFontFactor
'      If ApplEnde Then CreateCtlScaled F, 10102, 227, 1050, 225, "&Beenden", -1, "ApplBeenden " & QUO & QUO, HeightAndFontFactor
      CreateCtlScaled f, 11151, 0, 335, 225, "&_", -1, "Dim ok%:ok=ShowWindow(AccessHandle(),6)", ScaleFactor(), HeightAndFontFactor
      
      Breite(0) = ScaleFactor(1) * 11432 / Spalten(0)
      Breite(1) = Breite(0) * .8
      Breite(2) = Breite(1) * 1.1
      For i = 1 To 2
	Breite(0) = Breite(0) + Spalten(i) * (Breite(0) - Breite(i)) / (Spalten(0) - Spalten(i) + IIf(Spalten(i) = Spalten(0), 1, 0))
      Next
      x = 0
      For i = 0 To Spalten(0) - 1
	If Not Tabl Then
	  Set fd = qd.Fields(i)
	  fn = fd.Name
	 Else
	  Set fd = t(i)
	  fn = fd.Name
	  isRl = True
	  For j = 0 To d.Relations.Count - 1
	    Set Rl = d.Relations(j)
	    If Rl.ForeignTable = Tabelle Then
	      For k = 0 To Rl.Fields.Count - 1
		If Rl.Fields(k).ForeignName = fn Then
		  isRl = k
		  If Not (Rl.Attributes And DB_RELATIONDONTENFORCE) Then Exit For
		End If
	      Next
	    End If
	    If isRl > -1 Then Exit For
	  Next
	End If
	ty = fd.Type
	j = Breite(IIf(ty = DB_DATE, 2, Abs(ty < DB_TEXT)))
	k = fn = l
	Set c = CreateControl(e, 100, 1, "", "", x, Int(ScaleFactor(1) * 360 / HeightAndFontFactor), j, Int(ScaleFactor(1) * 284 / HeightAndFontFactor))
	c.Caption = IIf(k, "Status", fn)
	c.BackStyle = 0
	c.FontSize = 5.5 * HeightAndFontFactor
	c.FontUnderline = True
	c.FontName = "Arial"
	Set c = CreateControl(e, Switch(ty = 11, 108, ty = 1 Or isRl > -1, 111, -1, 109), 0, "", fn, x, 0, j, Int(ScaleFactor(1) * 227 / HeightAndFontFactor))
	c.Name = fn
	c.FontSize = 8 * HeightAndFontFactor
	If IsNumeric(fn) Then c.Format = "#.#0"
	p = "If BeimÄndern(""" & IIf(accExistField(Tabelle, l), l, "") & """) Then Cancel = True"'da p (s.u.) auch für Ereignisprozeduren ANDERER Felder benötigt
	If k Then
	  c.Visible = False
	  c.Enabled = False
	  Set c = CreateControl(e, 109, 0, "", "", x, 0, j, Int(ScaleFactor(1) * 227 / HeightAndFontFactor))
	  c.Name = fn & et
	  c.Enabled = False
	  c.FontSize = 8 * HeightAndFontFactor
	  c.ControlSource = "=Sperre(" & l & ")"
	  EventProcedure "BeforeDelConfirm", c, f, p
	End If
	x = x + j
	k = 0
	For j = 0 To d.Relations.Count - 1
	  Set Re = d.Relations(j)
	  If Re.Table = Tabelle And Re.Fields(0).Name = c.Name And Not (Re.Attributes And DB_RELATIONDONTENFORCE) Then
	    k = k + 1
	    fn = fn & q & " & CR() & " & q & "'" & Re.Fields(0).ForeignName & "' in Tabelle '" & Re.ForeignTable & "'"
	  End If
	Next
	EventProcedure "BeforeUpdate", c, f, InsString(p, IIf(k, "If Not IsNull([" & c.Name & "]) Then If YesNo(" & q & "Achtung: Die eingetragene Veränderung bewirkt die automatische Änderung der entsprechenden Werte in folgende" & IIf(k = 1, "m", "n") & " Feld" & IIf(k = 1, "", "ern") & ": " & fn & q & " & CRn(2) & " & q & "Änderung ausführen?" & q & "," & q & "Anpassung abhängiger Werte" & q & ",0,0) > -1 Then Cancel = True", ""), ":Else:")
	If TypeOf c Is BoundObjectFrame Then
	 Else
	  c.FontName = IIf(c.Name = "Russisch", "Czar", "Arial")
	  If TypeOf c Is ComboBox Then
	    If ty = 1 Then
	      c.RowSourceType = "Wertliste"
	      c.RowSource = "-1;ja;0;nein"
	      c.LimitToList = True
	      c.ColumnCount = 2
	      c.ColumnWidths = "0;" & c.Width / cm & "cm"
	     Else
	      fn = Rl.Fields(isRl).Name
	      c.RowSource = "SELECT " & IIf(fd.AllowZeroLength Or fd.Required = False, IIf(fd.AllowZeroLength, "''", "null") & " FROM[" & Rl.Table & "]" & UNION, "") & "DISTINCT " & fn & " FROM[" & Rl.Table & "]ORDER BY 1" & IIf(ty = DB_DATE, " DESC", "")
	      c.OnDblClick = "=TabelleBearbeiten()"
	      For j = 0 To d.Relations.Count - 1
		Set Re = d.Relations(j)
		If Re.ForeignTable = Rl.Table And Re.Fields(0).ForeignName = fn Then If Not (Re.Attributes And DB_RELATIONDONTENFORCE) Then Exit For
	      Next
	      If Not (Rl.Attributes And DB_RELATIONDONTENFORCE) Then EventProcedure "NotInList", c, f, "NichtInListe NewData, Response, -1, " & q & d.Name & q: c.LimitToList = True
	      c.ListWidth = ScreenSize(0) / 3
	      c.ListRows = 15
	    End If
	  End If
	End If
      Next
      
      GerätModus.Orientation = 1'Papierformat quer
      GerätModus.PaperWidth = PapierBreite()
      LSet dm = GerätModus
      f.PrtDevMode = dm.rgb
      
      ri.RightMargin = 0'Seitenränder verkleinern
      ri.LeftMargin = Druckrand + IIf(PapierBreite() - f.Width - Druckrand < 0, 0, .7 * (PapierBreite() - f.Width - Druckrand))
      ri.TopMargin = 284
      ri.BotMargin = 284
      ri.Columns = 1
      ri.ItemOrder = 1953
      LSet mip = ri
      f.PrtMip = mip.rgb
      
      DoCmd SetWarnings 0
      i = OcDLLShellExecute(0, "", SysCmd(SYSCMD_ACCESSDIR) & "OcHitBtn.exe", """#32770"" ""Speichern unter"" Button OK 10", "", 0)
      DoCmd Close A_FORM, e
      DoCmd OpenForm e
      DoCmd MoveSize 0, 0, ScreenSize(0), ScreenSize(1)

      Set f = Forms(e)
      Set r = f.RecordsetClone
      r.FindFirst IIf(Spalte, "'", "") & IIf(IsEmptyOrNull(Wert), IIf(Spalte, "", 0), Wert) & IIf(Spalte, "'", "") & "<=[" & Feld & "]"
      If Not r.NoMatch Then f.BookMark = r.BookMark
      If f(Feld).Enabled Then f(Feld).SetFocus
      r.Close
    
      Application.Echo True
    End If

    DoCmd Hourglass 0
End If

Exit Sub
TabelleBearbeitenAA:
  MsgError "", "TabelleBearbeitenA"
  Application.Echo True
  DoCmd Hourglass 0
  'Stop
  'Resume
  Exit Sub

End Sub

Private Sub TabelleBearbeitenASort (S$, f As Field)
Dim n$, t%
t = f.Type
If t < DB_MEMO Then
  n = f.Name
  S = MergeLists_WithTrunc(S, "[" & n & "]", ",") & IIf(t = DB_DATE Or t = DB_INTEGER And (n Like "*Jahr*" Or n Like "*Quartal*" Or n Like "*Monat*" Or n Like "*Tag*"), "desc", "")
End If
End Sub

Private Sub TabelleBearbeitenASpalten (ty, Spalten%())
If ty = DB_DATE Then
  Spalten(2) = Spalten(2) + 1
 ElseIf ty < DB_TEXT Then
  Spalten(1) = Spalten(1) + 1
End If
End Sub

Private Function TabelleErmitteln$ (DbName$, b$)
On Error GoTo TabelleErmittelnA

If b = "" Then Exit Function

Dim d As Database, i%, k%
Set d = DBEngine(0)(0)
For i = 0 To d.TableDefs.Count - 1
  If d(i).Name = b Then Exit For
Next
If i < d.TableDefs.Count Then
  TabelleErmitteln = b
 Else
  For i = 0 To d.QueryDefs.Count - 1
    If d.QueryDefs(i).Name = b Then Exit For
  Next
  If i < d.QueryDefs.Count Then b = d.QueryDefs(i).SQL
  Do Until InStr(b, Chr(10)) = 0
    i = InStr(b, Chr(10))
    Mid(b, i, 2) = " "
  Loop
  Do Until InStr(b, "  ") = 0
    i = InStr(b, "  ")
    b = Left(b, i) & Mid(b, i + 2)
  Loop
  b = SubstituteAll(b, "FROM[", "FROM [")
  i = InStr(b, "FROM ") + 5
  k = Mid(b, i, 1) = "["
  TabelleErmitteln = TabelleErmitteln(DbName, Trim(Mid(b, i - k, InStr(Mid(b, i), IIf(k, "]", " ")) + 2 * k)))
End If

Exit Function
TabelleErmittelnA:
  MsgError "", "TabelleErmitteln"
  Exit Function
  
End Function

Sub TabelleWählen (Filter$, Negotiation%, Caption$)
clean
TabelleBearbeitenA SelectItemPre("Name", "Name", "MSysObjects", "Type=1 and Val(VToS(Flags))=0 and not Name like'@*'and " & IIf(Negotiation, "not ", "") & "Name " & IIf(Right(Filter, 1) = "*", "like'" & Filter & "'", "in('" & SubstituteAll(Filter, "+", "','") & "')"), "Name", SubstituteAll(SubstituteAll(SubstituteAll(Caption, "(", "~"), "~", " ("), "  ", " "), 0), 1, ""
End Sub
