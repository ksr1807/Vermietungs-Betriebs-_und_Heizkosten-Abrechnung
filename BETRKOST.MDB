Option Compare Database
Option Explicit

Const tJ = "Jahre"
Const h = "Stunden"
Const z = "Zählerstände"
Const Br = "*Brennstoff"
Const u = "Umlageschlüssel"

Private Sub Abrechnung (d() As Database, wS$, Entwurf%)
Dim i%, p$, r$, e$(), B$, fB$, vB$, wT$, Fld$, kH2O$, uH2O$, SQL$, rs As Recordset
ReDim e(7)
Const s = " (S)"
Const o = "<alle>"
Const q = "VToD(Eigen)/iif(VToD(Gesamt),VToD(Gesamt),1)"
Const H2O = "Wasserzähl./*"
Const H2Olike = "[TS][rc][ih][nm][ku]*" 'Trink/Schmutz
Const H2Om = "er"
Const H2Ou = ".ohn.Einzelzählg."
kH2O = "Konto=SubstituteAll(Konto&'" & H2Om & "','" & H2Om & H2Om & "','" & H2Ou & "')"'Einstieg mit H2Om-Verdopplung, weil "er" 2x im String vorkommt und nur das Letzte ersetzt werden soll
uH2O = u & "=" & u & "&' Wasser'"
Const hnD = "haushaltsnahe_Dienstleistg"
Const a = "WohnungsEigenschaften"
Const Key = "Wohnung&Format(ab,""yyyymmdd"")"
Const w = "Wohnung=""'&w.Wohnung&'""and ab='&sqlDate(ab)&'and "
Const k = "Wohnung,ab"
Const uK = "UmlageKey"
Fld = SubstituteAll(k, ",", "&")

If wS Like "Abrechnung*" Then
  wS = "Abrechnung"
  i = True
  r = SelectItemPre("Jahr", "Jahr", tJ, "", "Jahr DESC", "Abrechnungsjahr:", 1)
 Else
  r = SelectItemPre("Trim(Objekt)", "Objekt", "Objekte", "", "Objekt", "Objekt:", 0)
End If
If r = "" Then Exit Sub
wT = "[" & wS & "]"

'Initialisierung der Fortschrittsanzeige
i = sbaStep()
Set rs = d(0).OpenRecordset("SELECT * FROM " & tJ & IIf(wS = "Abrechnung", " WHERE Jahr=" & r, " ORDER BY Jahr"))
rs.MoveLast
i = sbaInit(wS, IIf(i, 11 + 8 * rs.RecordCount, 14 + 3 * rs.RecordCount)) 'gemäß Anzahl der Aufrufe von CreateTbl+CreateTable+insertToGenDupl
rs.MoveFirst

SQL = ",w.Objekt FROM($ m INNER JOIN Wohnungen w ON m.Wohnung=w.Wohnung)"
e(0) = ".*" & SQL
B = "Belegung"
If CreateTbl(d(1), B, "* FROM $ WHERE " & Fld & "&ab_Jahr&ab_Monat IN(SELECT " & Fld & "&Max(ab_Jahr&ab_Monat)FROM $ GROUP BY " & k & ")") Then Exit Sub
If CreateTbl(d(1), z, "Art&ObjektTeil(NDLookup1('ObjektTeil','ObjektKonten','Konto',DLookup('Konto','Konten','" & u & "1=""'&Art&'""OR " & u & "2=""'&Art&'""')))as UmlageS,m" & e(0)) Then Exit Sub
If CreateTbl(d(1), a, u & ",Wert,p" & e(0) & "INNER JOIN Mieter p on w.Wohnung=p.Wohnung") Then Exit Sub
If insertToGenDupl(d(1), a & et, "", "", u & "=" & u & "&ObjektTeil(NDLookup1('ObjektTeil','Wohnungen','Wohnung',Wohnung))") Then Exit Sub

'Zähler nicht ab 0, sondern inkrementell...
e(0) = "UPDATE " & z & et & " set Stand=Stand-VToD(DMax('Stand','" & z & et & "','Stand<'&Stand&' AND Wohnung=""'&Wohnung&'""AND Art=""'&UmlageS&'""AND Nummer='&Nummer"
e(1) = " Art" & inkrementell
'
'...für Wasserzähler immer
d(1).Execute e(0) & "))WHERE" & e(1)
'
'...für sonstige Zähler bei Zwischenablesung
d(1).Execute e(0) & "&' AND Jahr='&Jahr))WHERE NOT" & e(1)

fB = B & "('"
vB = ",VToD(" & fB
B = B & et
While Not rs.eof
  e(7) = " AND Jahr=" & rs.Jahr
  e(0) = "'ab','Mieter','Wohnung=""'&m.Wohnung&'""and ab"
  e(1) = fB & "Zahlung-Kaltmiete-Garage'," & k & ",von,bis,"
  e(2) = ",iif(Year(ab)<" & rs.Jahr & ",'01.01." & rs.Jahr & "',ab)AS von,DateAdd('d',-1,GetValueOrDefault(VToS(DMin(" & e(0) & ">'&sqlDate(ab))),'01.01." & rs.Jahr + 1 & "'))"
  e(0) = e(0) & "<" & sqldate("1.1." & rs.Jahr)
  If wS = "Abrechnung" Or rs.Jahr = DMin("Jahr", "Jahre") Then
    e(3) = ",DLookup('Name','Mieter','" & w & "true')"
    e(4) = "as " & u & "," & fB & "Personen',m." & k & SubstituteAll(e(2), "AS von", "") & ",3)as Wert" & SQL & "GROUP BY m." & k & ",w.Objekt" & e(3)
    If CreateTbl(d(1), B, "m." & k & e(3) & "as Name,'Personen'" & e(4)) Then Exit Sub
    If CreateTbl(d(1), B & et, "m." & k & e(3) & "as Name,'Personen'&ObjektTeil(ObjektTeil)" & e(4) & ",ObjektTeil") Then Exit Sub
    insertToFromTmp d(1), B & et
    insertToAll d(1), a & et, B & et
  End If
  SQL = Key & " AS" & wT & ",Date()AS Datum,'01.01." & rs.Jahr & "'AS AbrechVon,'31.12." & rs.Jahr & "'AS AbrechBis" & e(2) & "AS bis,DateDiff('d',AbrechVon,AbrechBis)+1 AS AbrechTage,DSum('Anteil','Gradtage','MonatNr between '&Month(von)&' and '&Month(bis))as GradtagFaktor,iif(Month(von)<>1 or Month(bis)<>12,BinaryToList(FVDLookupSort('Format(CVDate(""1.""&MonatNr),""mmmm:"")&Format(Round_WithPos_FxLen(100*Anteil,2),"""")&""%""','Gradtage','MonatNr between '&Month(von)&' and '&Month(bis),'MonatNr'),' + '),'')as GradtagFooter,DateDiff('d',von,bis)+1 AS Tage,w.Objekt,w.Wohnung AS " & k & ",InsString(VToS(Titel),a.Name,' ')AS Mieter,Anrede,iif(Titel like'*partner'OR Titel like'*paar'OR Titel='Familie',1,0)AS Fam,perDu,GetValueOrDefault(VToS(StraßeNr),VToS(NDLookup1('StraßeNr','Adressen','Name',Objekt)))AS Straße,GetValueOrDefault(VToS(Plz+' '&Ort),VToS(NDLookup1('Plz+Space(1)&Ort','Adressen','Name',Objekt)))AS Stadt," & e(1) & "0)AS VorauszahlungsListe,"
  If CreateTable(d(1), wS, k, "", SQL & "VToD(" & e(1) & "2))AS VZSum,EUR(VZSum)AS VorauszahlungsSumme" & vB & "Antenne'," & k & ",von,bis,2))AS Antenne" & vB & "Internet'," & k & ",von,bis,2))AS Internet,VToD(FDLookupSort('Kaltmiete','" & B & "','Wohnung=""'&Wohnung&'""AND ab='&sqlDate(ab),'ab DESC')+Garage)AS Miete,FDLookupSort('iif(GarageSeparat,0,Garage)','" & B & "','Wohnung=""'&Wohnung&'""AND ab='&sqlDate(ab),'ab DESC')AS Garage,iif(Garage>0,'(davon '&EUR(Garage)&' für Garage)','')AS davonGarage,VToD(FDLookupSort('Zahlung-iif(GarageSeparat,Garage,0)','" & B & "','Wohnung=""'&Wohnung&'""AND ab='&sqlDate(ab),'ab DESC'))-Miete AS VorauszahlungAlt FROM Adressen a INNER JOIN(Wohnungen w INNER JOIN Mieter m ON w.Wohnung=m.Wohnung)ON a.Name=m.Name WHERE Year(ab)=" & rs.Jahr & " OR ab=DMax(" & e(0) & "')OR Year(FDLookupSort(" & GetValFromBinary(ListToBinary(e(0), " "), 1) & " Name<>""'&m.Name&'""','ab'))=" & rs.Jahr) Then Exit Sub
  
  'Sonderfaktor(en), z.B. wegen Umstellung der Abrechnungsperioden-Stichtage
  e(0) = "DLookup('Faktor','Sonderfaktoren','" & w & u & "=""'&UmlageS&'""" & e(7) & "')"
  d(1).Execute "UPDATE " & z & et & " w SET Stand=Round_WithPos_FxLen(Stand*" & e(0) & ",0)where " & e(0) & ">=0"

  p = "Aufteilung"
  e(1) = "r." & SubstituteAll(SubstituteAll(Fld, "&", "+"), "+", ",r.") & "," & u & ",AbrechTage,Tage,r.Objekt"
  e(2) = " FROM " & a & et & " a INNER JOIN" & wT & "r on a.Wohnung=r.Wohnung and a.ab=r.ab "
  If CreateTbl(d(1), "S", "Min(a.Objekt)AS o," & u & " as u,Min(Wert*Tage/AbrechTage)AS v" & e(2) & "GROUP BY a.Wohnung,a.ab," & u) Then Exit Sub
  If CreateTable(d(1), p, k, "", e(1) & ",Wert as Eigen,0 as Gesamt,.0 AS Faktor" & e(2) & UNION & SubstituteAll(e(1), "l,A", "l&iif(" & u & " LIKE'" & H2O & "'or " & u & "='" & h & "','',ObjektTeil(NDLookup1('ObjektTeil','Wohnungen','Wohnung',Wohnung))),A") & ",VToD(DSum('Stand','" & z & et & "','Art=""'&" & u & "&'""" & e(7) & " and Wohnung=""'&Wohnung&'""and ab='&sqlDate(ab))),0,0 FROM" & wT & "r," & u) Then Exit Sub
  d(1).Execute "DELETE FROM " & p & " WHERE Eigen=0"

  e(4) = " where Konto like'Wasser:  " & H2Olike & "wasser'" 'Leerzeichenanzahl GENAU SO wegen Sortierung
  
  If wS = "Abrechnung" Then 'Umlageschlüssel "* Wasser" einfügen für alle ohne Wohnungszähler
    e(0) = u & "=" & u & "&' Wasser'"
    e(3) = " WHERE Konto LIKE'*" & H2Ou & "'"
    If insertToGenDupl(d(1), p, u, "WHERE " & u & " IN(SELECT " & u & "1 FROM Konten" & e(3) & ")AND NOT " & Fld & " IN(SELECT " & Fld & " FROM " & z & " WHERE Jahr=" & r & " AND Art LIKE'" & H2O & "')", e(0)) Then Exit Sub
    d(1).Execute "UPDATE " & p & " w SET Gesamt=DSum('Eigen','" & p & "','Objekt=""'&Objekt&'""and " & u & "=""'&" & u & "&'""'),Faktor=GetValueOrDefault(VToS(DLookup('Faktor','Sonderfaktoren','" & w & u & "=""'&" & u & "&'""" & e(7) & "')),1)"
  
    For i = 1 To 2
      e(i) = "," & u & i & " AS " & uK & i
    Next
    If CreateTbl(d(1), "Konten", "*" & e(1) & e(2) & " FROM $") Then Exit Sub

    e(5) = "ObjektKonten"
    If CreateTbl(d(1), e(5), "* FROM $") Then Exit Sub
    If insertToGenDupl(d(1), e(5) & et, "", e(4), kH2O) Then Exit Sub
  
    For i = 1 To 2
      e(i) = "k.Konto," & hnD & ",Objekt,Trim(" & uK & i & "&ObjektTeil(ObjektTeil))as " & u & "," & uK & i & " AS " & uK & ",Einheit," & IIf(i = 1, "", "100-") & "Anteil1 as Anteil FROM(Konten" & et & " k INNER JOIN " & e(5) & et & " o ON k.Konto=o.Konto)INNER JOIN " & u & " s ON k." & uK & i & "=s." & u
    Next
    If CreateTable(d(1), "Umlage", "Konto", "", e(1) & UNION & e(2) & " WHERE NOT " & uK & "2 is null") Then Exit Sub
    d(1).Execute "UPDATE Umlage SET " & e(0) & e(3)
  End If
  
  e(2) = "Ausgaben"
  e(3) = e(2) & et
  If wS = "Abrechnung" Or rs.Jahr = DMin("Jahr", "Jahre") Then If CreateTbl(d(1), e(2), "* FROM $") Then Exit Sub
  e(6) = "WHERE true" & e(7) & " AND Konto=""Pflege:-- Stunden Eigenleistung"""
  e(5) = "[0]*VToD(DLookup('Gesamt','" & p & "','" & u & "=""" & h & """AND Wohnung IN(SELECT Wohnung FROM Wohnungen WHERE Objekt=""'&Objekt&'"")'))"
  d(1).Execute "UPDATE " & e(3) & " SET Konto='Pflege: Haus/Hof/Gart./Wint.d.(Eig.leist.)',[0]=" & e(5) & e(6)
  insertToFromOri d(), e(2), e(6)
  d(1).Execute "UPDATE " & e(3) & " SET[0]=-" & e(5) & e(6)

  If wS = "Abrechnung" Or rs.Jahr = DMax("Jahr", "Jahre") Then 'Wasser: Umverteilung des nicht gezählten Rests
    e(0) = RightDel(H2O, 1) & "gesamt"
    e(1) = u & "<>""" & e(0) & """AND " & u & " LIKE""" & H2O & """"
    e(0) = u & "=""" & e(0) & """"
    SQL = "UPDATE " & e(3) & " set[#]=[#]*DLookup('" & q & "','" & p & "','"
    e(5) = CStr(VToD(DLookup("Gesamt", p, e(0))))
    d(1).Execute "UPDATE " & p & " set Gesamt=" & e(5) & " WHERE " & e(1)
    d(1).Execute "UPDATE " & p & " set Eigen =" & e(5) & "-VToD(DSum('Val(Eigen)','" & p & "','" & e(1) & "'))WHERE " & e(0)
    z0_Upd13Flds d(1), SQL & e(0) & "')" & e(4)
    d(1).Execute "UPDATE " & e(3) & " SET " & kH2O & e(4)
    insertToFromOri d(), e(2), e(4)
    e(4) = SubstituteAll(e(4), H2Olike, "Trink")
    e(5) = SubstituteAll(SubstituteAll(e(4), " Trink", "Garten"), " like", "=")'Leerzeichenanzahl GENAU SO wegen Sortierung
    d(1).Execute "UPDATE " & e(3) & SubstituteAll(e(5), "where", "set") & e(4)
    insertToFromOri d(), e(2), e(4)
    z0_Upd13Flds d(1), SQL & e(1) & "AND Wohnung like""*" & o & """')" & e(5)
  End If
  
  rs.MoveNext
Wend
rs.Close

If wS = "Abrechnung" Then
  d(1).Execute "UPDATE " & p & " SET eigen=VToD(eigen)*AbrechTage/Tage WHERE " & u & " like'Personen*'"
  e(4) = "a." & u & "-" & u & "+Einheit-Einh+iif(Anteil=100,'','('&Anteil&' %)')-umlProz+EUR(umzulegen)-KostenJeSchlüssel+RoundOpt(Gesamt,3)-Gesamteinheiten+RoundOpt(Eigen,3)-eigEinheiten+Round_WithPos_FxLen(eigProz,2)&' %'-eigProzGerundet+EUR(KTeil)-eigKosten+iif(Tage=AbrechTage OR DCount('*','Zähler','Art=""'&u." & u & "&'""')OR Faktor>1,' ','*')&' '&iif(" & hnD & ",'H','')-anteilig"
  For i = 1 To 2
    Fld = e(4)
    SQL = "DLookup('Objekt','Wohnungen','Wohnung=""'&a.Wohnung&'""')AS Objekt,a." & Key & "AS " & wS & et & "," & hnD & ",u.Konto,VToD(DLookUp('[0]+([1]+[2]+[3]+[4]+[5]+[6]+[7]+[8]+[9]+[10]+[11]+[12])*(1+.19*Abs([1-12_netto]))','" & e(3) & "','Konto=""'&Konto&'""and Objekt=""'&DLookUp('Objekt','Wohnungen','Wohnung=""'&a.Wohnung&'""')&'""and Jahr=" & r & "'))AS Betrag,Betrag*Anteil/100 AS umzulegen," & q & "*100 AS eigProz,umzulegen*eigProz/100*" & IIf(i = 1, "iif(Konto like'" & Br & "',iif(Faktor<0,MaxD(GradtagFaktor,Tage/AbrechTage),GradtagFaktor),Abs(Faktor)*iif(DCount('*','Zähler','Art=""'&u." & u & "&'""'),1,Tage/AbrechTage))", "1") & " AS KTeil,DLookup('GradtagFaktor','" & wS & "','" & wS & "=""'&a." & Key & "&'""')AS GradtagFaktor"
    'z.vorh.Zeile: Wenn unter Sonderfaktoren auf -1 konfiguriert, dann per "MaxD(GradtagFaktor,Tage/AbrechTage)" jeweils die für den Vermieter günstigste Variante...nicht ganz fair ;-)
    While Fld > ""
      e(5) = DevideString(Fld)
      SQL = InsString(SQL, "Crn(" & i - 1 & ")&" & DevideString_WithTrunc(e(5), "-") & " AS[" & e(5) & "1]", ",")
    Wend
    If CreateTable(d(1), et & i, "", "", SQL & " FROM(" & p & " a INNER JOIN Wohnungen w on a.Wohnung=w.Wohnung)INNER JOIN Umlage u ON w.Objekt=u.Objekt AND a." & u & "=u." & u & " WHERE DLookUp('" & u & i & "','Konten','Konto=""'&u.Konto&'""')=" & uK) Then Exit Sub
  Next
  
  e(5) = "DLookup('"" (""&Eigen&"" von ""&Gesamt&"" m3)""','" & p & "','" & e(0) & "AND Wohnung like""*" & o & """')"
  d(1).Execute "UPDATE " & et & "1 SET Konto=SubstituteAll(Konto,'" & H2Ou & "','" & H2Om & "'&" & e(5) & ")"
  e(3) = " Konto='Wasser: Gartenwasser'"
  d(1).Execute "UPDATE " & et & "1 SET" & e(3) & "&" & SubstituteAll(e(5), e(0), e(1)) & "WHERE" & e(3)
  d(1).Execute "DELETE FROM " & et & "1 WHERE Abrechnung" & et & " LIKE'*" & o & "*'OR KTeil=0"
  d(1).Execute "UPDATE " & et & "1 SET " & u & "1=" & u & "1&' à '&EUR(DLookup('[0]','" & e(2) & "','" & Mid(e(6), 7) & "AND Objekt=""'&Objekt&'""'))WHERE " & u & "1='" & h & "'"
  
  e(2) = "Bezeichnung" 'Sortierspalte
  e(3) = "k.KTeil+VToD(z.KTeil)"
  SQL = "k.[" & wS & et & "]AS" & wT & ",k.Konto&iif(umlProz>'',' (gesamt: '&Gesamtkosten&')','')AS " & e(2) & ",EUR(k.Betrag)AS Gesamtkosten," & e(3) & "AS K"
  While e(4) > ""
    e(1) = DevideString(e(4))
    e(0) = DevideString_WithTrunc(e(1), "-") 'e(0) hier nur zum "Wegwerfen"
    SQL = InsString(SQL, "k.[" & e(1) & "1]&z.[" & e(1) & "1]AS[" & e(1) & "]", ",")
  Wend
  
  p = ",0 AS first,0 AS last FROM "
  e(0) = UNION & wT & ",'Anschluss Antenne','',Antenne,'Festbetrag','mtl.','',EUR(Antenne/Eigen),''" & vB & "Antenne'," & k & ",von,bis,1))AS Eigen,'',EUR(Antenne),''" & p & "" & wT & "WHERE Antenne>0"
  If CreateTable(d(1), et, wS, "", SQL & p & et & "1 k LEFT JOIN " & et & "2 z ON k.[" & wS & et & "]=z.[" & wS & et & "]AND k.Konto=z.Konto WHERE not k.Betrag is null and " & e(3) & e(0) & SubstituteAll(e(0), "Antenne", "Internet")) Then Exit Sub
  
  p = "Faktor>-1 and "
  e(0) = SubstituteAll(w, "w.", "")
  e(1) = e(0) & p
  SQL = "*,DSum('K','" & et & "','" & wT & "=""'&" & wS & "&'""')AS Kost,EUR(DSum('K','" & et & "','" & wT & "=""'&" & wS & "&'""and anteilig LIKE""*H""'))AS KostHnD,EUR(Kost)AS Kosten,VZSum-Kost AS Diff,EUR(Abs(Diff))AS Differenz,iif(Diff<0,'eine Nachzahlung','ein Guthaben')AS DifferenzArt,iif(VZSum-Kost<DLookup('VorauszahlungsErhöhung_ab_Differenz','Wohnungen','Wohnung=""'&Wohnung&'""')OR VZSum-Kost>DLookup('VorauszahlungsSenkung_ab_Differenz','Wohnungen','Wohnung=""&Wohnung&""'),RoundTo(VToD(VorauszahlungAlt)-Diff/12,DLookup('VorauszahlungsRundung_auf','Wohnungen','Wohnung=""'&Wohnung&'""')),VorauszahlungAlt)AS VorauszahlungNeu,EUR(Miete)AS KaltMiete,EUR(Miete+VorauszahlungNeu)AS GesamtMiete,Mid(InsString('.',BinaryToList(VToS(FVDLookupSort('Begründung','Sonderfaktoren','" & e(1) & "Jahr=" & r & "','" & u & "')),', '),'" & Trim(s) & " = '),2)AS Sonder,"
  SQL = SQL & "iif(perDu,iif(Fam,'Euer','Dein'),'Ihr')AS Possesiv,iif(Diff<0,'Bitte überweis'&iif(perDu,iif(Fam,'t','e'),'en Sie')&' diesen Betrag auf unser '&iif(perDu,iif(Fam,'Euch','Dir'),'Ihnen')&' bekanntes Konto'&Cr()&'(IBAN: '&DLookup('IBAN&"", BIC:""&BIC','Adressen','Name=""'&Objekt&'""')&').',iif(Diff>0,'Diesen Betrag erh'&iif(perDu,iif(Fam,'altet Ihr','ältst Du'),'alten Sie')&' in wenigen Tagen per Überweisung auf '&Possesiv&' Konto '&DLookup('IBAN&"" BIC:""&BIC','Adressen','Titel&"" ""&Name=""'&Mieter&'""')&' zurückerstattet.',''))AS DifferenzAusgleich,EUR(VorauszahlungNeu)AS VorauszahlungNeuFormatiert,"
  If CreateTable(d(1), wS & et, wS, "", SQL & "InsString(VToS(DLookup('Bemerkung','BemerkungenMieterJahr','" & e(0) & "true')),VToS(iif(VorauszahlungNeu>VorauszahlungAlt,DLookup('Erhöhung_Bemerkung','Wohnungen','Wohnung=""'&Wohnung&'""'),iif(VorauszahlungNeu<VorauszahlungAlt,DLookup('Senkung_Bemerkung','Wohnungen','Wohnung=""'&Wohnung&'""'),''))),Cr())AS Bemerkung,iif(VorauszahlungNeu=VorauszahlungAlt,'bleibt unverändert',iif(VorauszahlungNeu>VorauszahlungAlt,'erhöht','verringert')&' sich ab '&Format(DateAdd('m',2,Now),'mmmm yyyy')&' um '&EUR(Abs(VorauszahlungNeu-VorauszahlungAlt))&' auf '&VorauszahlungNeuFormatiert)&'. Die '&iif(VorauszahlungNeu<>VorauszahlungAlt,'neue','unveränderte')&' Gesamtmiete beträgt '&Gesamtmiete AS Änderung,iif(perDu,'Viele Grüße','Mit freundlichen Grüßen')AS Gruß FROM" & wT) Then Exit Sub
  d(1).Execute "DELETE from[" & wS & et & "]WHERE Kost IS NULL"
  
  p = "UPDATE " & et & " SET ^st=1 WHERE " & e(2) & "=DM°('" & e(2) & "','" & et & "','" & wT & "=""'&" & wS & "&'""')"
  d(1).Execute SubstituteAll(SubstituteAll(p, "^", "fir"), "°", "in")
  d(1).Execute SubstituteAll(SubstituteAll(p, "^", "la"), "°", "ax")
  
  txtPrepareAndOpenSpecial wS, "SELECT *," & u & "&iif(DLookup('Begründung','Sonderfaktoren','" & e(1) & """'&" & u & "&'""like""*""&" & u & " and Jahr=" & r & "')>'','" & s & "')AS USchlü,DLookup('Anrede&"", ""&StraßeNr&"", ""&PLZ&"" ""&Ort','Adressen','Name=""'&Objekt&'""')AS VAdr,DLookup('Ort','Adressen','Name=""'&Objekt&'""')AS VOrt FROM[" & wS & et & "]t LEFT JOIN " & et & " s ON t." & wT & "=s." & wT & "ORDER BY t." & wT & "," & e(2), DT_Word97, Entwurf
 
 Else
  wS = wS & "  -  " & r
  DoCmd Close A_REPORT, wS
  r = " WHERE Objekt='" & r & "'"
  
  e(0) = ""
  For i = 1 To 13
    e(0) = InsString(e(0), "Objekt,Konto," & i & " as i," & IIf(i < 13, Format(i, "'00'"), "'Jahresrechnung'") & "as P,Jahr,[" & IIf(i < 13, i, 0) & "]as Menge FROM " & e(3), UNION)
  Next
  If CreateTbl(d(1), et, e(0)) Then Exit Sub
  
  e(0) = " Jahr>Year(Now())-12 GROUP BY "
  If CreateTbl(d(1), "Kosten", "iif(Konto like'Heizung*','Heiz','Betriebs')&'kosten'as G,iif(DomCount('SELECT Konto FROM " & et & et & " WHERE Menge AND Konto=" & Chr(34) & "'&Konto&'" & Chr(34) & "AND" & e(0) & "Konto,Jahr HAVING Count(*)>1'),Konto,' ')as Einheit,Format(i,'00')as S,iif(Einheit=' ',Trim(SubstituteAll(Konto,'Heizung:','')),P)as Position,Jahr,Round_WithPos_FxLen(Menge,2)as MengeList,Menge FROM " & et & et & r & "AND Menge") Then Exit Sub
  
  Betriebskosten "Jahr", "Objekt", ",Wohnungen w", " AND z.Wohnung=w.Wohnung"
  Betriebskosten "Mieter", "z." & k, "", ""
  If CreateTbl(d(1), "Stand", "Min(UmlageS)as G,Min(z.Wohnung&'  ('&Trim(FDLookupSort('Name','Mieter','Wohnung=" & Chr(34) & "'&z.Wohnung&'" & Chr(34) & "','ab DESC'))&')')as Einheit,Position as S,Min(IfNoH(z.Art,DoubleChar(Right(Space(3)&z.Nummer,4),' '))&iif(Standort='.','',IfNoH(z.Art,'  (')&Standort&IfNoH(z.Art,')')))as Position,Jahr,BinaryToList(VToS(FVDLookupSort('Stand','" & z & "'&iif(z.Art" & inkrementell & ",'','" & et & "'),'Art=""'&z.Art&'""and Nummer='&z.Nummer&' and Jahr='&Jahr,'ab')),'+')as MengeList,Val(Eval(MengeList))as Menge FROM Zähler z INNER JOIN " & z & et & " s ON z.Nummer=s.Nummer AND z.Art=s.Art WHERE z.Wohnung IN(SELECT Wohnung FROM Wohnungen" & r & ")AND" & e(0) & "z.Art,z.Nummer,Jahr") Then Exit Sub
  If CreateTable(d(1), et, "Einheit,Position,Jahr", "", "* FROM Kosten" & et & UNION & "* FROM Stand" & et) Then Exit Sub
  
  p = "J_"
  e(1) = "Gruppe,Einheit,Sortierung,Position"
  e(2) = "Min(G)as Gruppe,Einheit,Min(S&Position)as Sortierung,Position FROM " & et & " WHERE" & e(0) & "Einheit,Position PIVOT'" & p & "'&Jahr"
  If CreateTable(d(1), wS & "L", e(1), "Min(MengeList)", e(2)) Then Exit Sub
  If CreateTable(d(1), wS & "S", e(1), "Sum(Menge)", SubstituteAll(e(2), "'" & p & "'&", " ")) Then Exit Sub
  Set rs = d(1).OpenRecordset(wS & "S")
  SQL = ""
  For i = 0 To rs.Fields.Count - 1
    r = rs(i).Name
    If r Like "####" Then SQL = SQL & "," & p & r
  Next
  rs.Close
  If CreateTable(d(1), wS, e(1), "", "S.*" & SQL & " FROM[" & wS & "L]L INNER JOIN [" & wS & "S]S ON L.Einheit=S.Einheit AND L.Position=S.Position") Then Exit Sub
  
  Bericht d(1), wS, "2+5", p
End If
sbaDone
End Sub

Private Sub Änderung (rw, c%, v!)
If v > 0 Then rw = InsString(VToS(rw), IIf(c > 1, c & "x", "") & v, " + ")
End Sub

Function Belegung (Art$, Wohnung$, ab#, von$, bis$, Operation%)
Dim tmp!, rw, c%, g!, v&
Const d = "1.1."
v = Val(Format(CVDate(von), "yyyymm"))
While v <= Val(Format(CVDate(bis), "yyyymm"))
  tmp = VToD(RoundOpt(DLookup(Art, "Belegung", "Wohnung='" & Wohnung & "'AND ab=" & sqldate(ab) & " AND ab_Jahr&ab_Monat=DMax('ab_Jahr&ab_Monat','Belegung','Wohnung=""" & Wohnung & """AND ab=" & sqldate(ab) & " AND Format(ab_Jahr,""0000"")&Format(ab_Monat,""00"")<=Format(Int(" & v & "/100),""0000"")&Format(" & v & " Mod 100,""00"")')"), 2))
  Select Case Operation
   Case 1    'Anzahl (Monate)
    If tmp Then rw = VToD(rw) + 1
   Case 2, 3 'Summe oder Durchschnitt(arithm.Mittel)
    rw = VToD(rw) + tmp
    c = c + 1
   Case Else 'Liste
    If tmp <> g Then
      Änderung rw, c, g
      g = tmp
      c = 1
     Else
      c = c + 1
    End If
  End Select
  v = v + IIf(v Mod 100 = 12, 89, 1)
Wend
If Operation = 3 Then
  Belegung = rw / IIf(c, c, 1)
 Else 'keine Rechenoperation, da rw hier String
  Belegung = rw
End If
End Function

Private Sub Betriebskosten (Bez$, Sel$, Frm$, Whr$)
Dim Nam$
Nam = "Q_" & Bez
CreateQuerySpecial Nam, "SELECT " & Sel & ",z.Art,s.Jahr,SUM(Stand)AS " & Nam & " FROM " & z & et & " s,Zähler z" & Frm & " WHERE s.Art=z.Art AND s.Nummer=z.Nummer" & Whr & " GROUP BY z.Art,Jahr," & Sel
End Sub

Function check% ()
Dim e%, h$, i%, j%, v, t$, F As Form, c As Control
Const a = " und " 'auch als "dummy" zwecks nichtleeren Array-Felds == NOT (Invertierung)
Set F = Screen.ActiveForm
t = F.RecordSource
t = Mid(t, InStr(t, "[") + 1)
t = Left(t, InStr(t, "]") - 1)
Select Case t
 Case "Konten"
  ReDim k(2, 2, 1) As String '(Spalte[0=Anteil1][1/2=Umlageschlüssel1/2], Konto_e[1=Brentoff][0=andere], Wert[0=Soll/Untergrenze][1=num.->Obergrenze oder leer->normal oder String->invert/not])
  'mit + getrennte multiple Einträge bei k(i,1,0) und k(i,2,0) möglich, jedoch (noch) keine Mischung mit leer/null möglich
  k(0, 0, 0) = "Anteil1"
  k(1, 0, 0) = u & 1
  k(2, 0, 0) = u & 2
  k(0, 1, 0) = "100"
  k(0, 2, 0) = "30"
  k(0, 2, 1) = "50"
  k(1, 1, 0) = "Heizk.verteiler"
  k(1, 1, 0) = k(1, 1, 0)
  k(1, 2, 0) = k(1, 1, 0)
  k(2, 2, 0) = k(1, 1, 0)
  k(1, 1, 1) = a
  k(1, 2, 1) = a
  Set c = F!Konto
  j = Abs(c Like Br) + 1
  t = ""
  For i = 0 To 2
    v = F(k(i, 0, 0))
    If IsNumeric(k(i, j, 1)) Then
      If Not (v >= k(i, j, 0) And v <= k(i, j, 1)) Then t = InsString(t, "für '" & k(i, 0, 0) & "' nur ein Wert zwischen " & k(i, j, 0) & " und " & k(i, j, 1), a)
     Else
      e = k(i, j, 1) > ""
      h = IIf(i, """", "")
      If IIf(k(i, j, 0) > "", InList(k(i, j, 0), VToS(v)) = e, IsNull(v) = e) Then t = InsString(t, "für " & k(i, 0, 0) & " " & IIf(e, "kein", "nur") & " " & h & GetValueOrDefault(SubstituteAll(k(i, j, 0), "+", h & " oder " & h), "<leer>") & h, a)
    End If
  Next
  If t > "" Then
    MsgStop "Im Konto """ & c & """ ist " & t & " zulässig!"
    check = True
  End If
 Case "..."
  '...
 Case Else
  '...
End Select
End Function

Function ifNoH (a$, s$)
If a <> h Then ifNoH = s
End Function

Private Sub insertTo (d As Database, dst$, src$, a$)
d.Execute "INSERT INTO " & dst & " SELECT * FROM " & src & a
End Sub

Private Sub insertToAll (d As Database, dst$, src$)
insertTo d, dst$, src$, ""
End Sub

Private Sub insertToFromOri (d() As Database, t$, w$)
insertTo d(1), t & et, t, " in'" & d(0).Name & "'" & w
End Sub

Private Sub insertToFromTmp (d As Database, t$)
insertToAll d, t, t & et
End Sub

Private Function insertToGenDupl% (d As Database, t$, extra$, w$, s$)
If CreateTbl(d, t, "*" & IIf(extra > "", "," & extra, "") & " FROM $ " & w) Then
  insertToGenDupl = True
 Else
  d.Execute "UPDATE " & t & et & " SET " & s
  insertToFromTmp d, t
End If
End Function

Function ObjektTeil$ (v)
If v > "" Then ObjektTeil = DLookup("Trennzeichen&iif([Leerzeichen am Ende],' ','')", "Trennzeichen zwischen Umlageschlüssel und ObjektTeil") & v
End Function

Private Sub z0_recCreate (tbl$)
Dim d As Database, t As TableDef, i%, Jahr%, Fld$, Key$, SQL$
Const j = "Jahr"

Set d = DBEngine(0)(0)
Set t = d.Tabledefs(tbl)

For i = 0 To t.indexes.Count - 1
  If t.indexes(i).primary Then
    For Jahr = 0 To t.indexes(i).Fields.Count - 1
      Fld = t.indexes(i)(Jahr).Name
      Select Case Fld
       Case "Jahr", "ab", "Wohnung"
       Case Else
        Key = InsString(Key, Fld, "&")
      End Select
    Next
    Exit For
  End If
Next

For Jahr = Val(GetValueOrDefault(VToS(DMax(j, tbl)), Year(Now))) To Year(Now) - IIf(tbl = tJ, 0, 1)
  For i = 0 To t.Fields.Count - 1
    Fld = t(i).Name
    SQL = InsString(SQL, Switch(Fld = j, Jahr & " AS", Fld = "Nummer", "", t(i).Type < DB_DATE, "0 AS") & "[" & Fld & "]", ",")
  Next
  CreateQuerySpecial et, "select " & SQL & " from " & tbl & " where " & IIf(tbl = tJ, "", IIf(tbl = z, "ab=DMax('ab','" & tbl & "','Jahr='&Jahr&' and Wohnung=""'&Wohnung&'""')and ", "") & "Folgejahr_nicht_mehr=0 and ") & j & "=" & Jahr - 1 & " and not " & InsString(CStr(Jahr), Key, "&") & " in(select " & InsString("Jahr", Key, "&") & " from " & tbl & ")"
  insertToAll d, tbl, et
  d.QueryDefs.Delete et
  SQL = ""
Next
End Sub

Private Sub z0_Upd13Flds (d As Database, SQL$)
Dim i%
For i = 0 To 12
  d.Execute SubstituteAll(SQL, "#", CStr(i))
Next
End Sub

Function zz_Main (Nr%, Menu%)
Dim item%, What$, a$, n%, t$(), d As Database

item = item + 1
ReDim Preserve t(item)
If Nr = item Then
  What = "Abrechnung/Auswertung..."
  If Menu Then GoTo MAIN_MENU
  clean
  t(item) = "@Tasks"
  DeleteTable t(item)
  t(item) = "[" & t(item) & "]"
  Set d = DBEngine(0)(0)
  d.Execute "create table " & t(item) & "(i short,T char)"
  Do
    n = n + 1
    a = zz_Task(n, -1)
    If a = "" Then Exit Do
    d.Execute "insert into " & t(item) & "(i,T)values(" & n & ",'" & a & "')"
  Loop
  a = zz_Task(SelectItemPre("T", "i", t(item), "", "T", What, 0), 0)
  On Error Resume Next 'bei superschnellem Klicken (->Doppelaufruf)!
  d.Execute "drop table " & t(item)
  On Error GoTo 0
End If

item = item + 1
ReDim Preserve t(item)
t(item) = "Ausgaben+BemerkungenMieterJahr+Sonderfaktoren+Zählerstände"
If Nr = item Then
  What = "Abrechnungsdaten(Kosten, Zählerstände...)"
  If Menu Then GoTo MAIN_MENU
  TabelleWählen t(item), 0, What
End If

item = item + 1
ReDim Preserve t(item)
t(item) = "Adressen+Belegung+Mieter"
If Nr = item Then
  What = "Vermietungsdaten(Belegung, Zahlungen...)"
  If Menu Then GoTo MAIN_MENU
  TabelleWählen t(item), 0, What
End If

item = item + 1
ReDim Preserve t(item)
t(item) = "Adressen+Objekte+ObjektTeile+ObjektKonten+Wohnungen+WohnungsEigenschaften+Zähler"
If Nr = item Then
  What = "Objektdaten     (Gebäude, Wohnungen...)"
  If Menu Then GoTo MAIN_MENU
  TabelleWählen t(item), 0, What
End If

item = item + 1
ReDim Preserve t(item)
t(item) = "Einheiten+Konten+ObjektKonten+Umlageschlüssel+ZählerArten"
If Nr = item Then
  What = "Umlagedefinition(U.-Konten, U.-Schlüssel...)"
  If Menu Then GoTo MAIN_MENU
  TabelleWählen t(item), 0, What
End If

item = item + 1
ReDim Preserve t(item)
If Nr = item Then
  What = "Sonstiges       (Grundlagen...)"
  If Menu Then GoTo MAIN_MENU
  For n = 2 To item - 1
    t(item) = t(item) & "+" & t(n)
  Next
  TabelleWählen t(item), -1, What
End If

Exit Function
MAIN_MENU:
zz_Main = What
End Function

Sub zz_Prepare ()
z0_recCreate tJ
z0_recCreate "Ausgaben"
z0_recCreate z
End Sub

Private Function zz_Task$ (Nr%, Menu%)
Dim item%, What$, p$, e$(), d() As Database
ReDim d(1), e(1)

Set d(0) = DBEngine(0)(0)
fnsplit d(0).Name, p, e(0), ""
e(1) = p & e(0) & "." & et
On Error Resume Next
Kill e(1)
Set d(1) = DBEngine(0).CreateDatabase(e(1), DB_LANG_GENERAL)
Set d(1) = DBEngine(0).OpenDatabase(e(1), -1)
On Error GoTo 0

item = item + 1
If Nr = item Then
  What = "Datenmodell: grafische Darstellung"
  If Menu Then GoTo TASK_MENU
  Datenmodell d(0)
End If

item = item + 1
If Nr = item Then
  What = "VDI 2067 / DIN 4713 / HeizkostenV § 9b Abs_2: Gradtagzahlen"
  If Menu Then GoTo TASK_MENU
  If CreateTbl(d(1), What, "'Monat'as Überschrift,''as Gruppierung,Format(MonatNr,'00      ')&Format(CVDate('1.'&MonatNr),'mmmm')as Monat,100*Anteil as Anteil_in_Prozent from Gradtage") Then Exit Function
  Bericht d(1), What, "1+3", ""
End If

item = item + 1
If Nr = item Then
  What = "Kosten und Zählerstände: Übersicht"
  If Menu Then GoTo TASK_MENU
  Abrechnung d(), What, 0
End If

item = item + 1
If Nr = item Then
  What = "AbrechnungsDokumentvorlage: Entwurfsansicht"
  If Menu Then GoTo TASK_MENU
  Abrechnung d(), What, -1
End If

item = item + 1
If Nr = item Then
  What = "Abrechnung öffnen"
  If Menu Then GoTo TASK_MENU
  Abrechnung d(), What, 0
End If

Exit Function
TASK_MENU:
zz_Task = What
End Function

